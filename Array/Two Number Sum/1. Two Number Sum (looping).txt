//TWO NUMBER SUM
//TIME COMPLEXITY - O(n^2) 
//{why? since we are using nested for loops(2) in the function "find_two_number" }
//SPACE COMPLEXITY - O(1)
//{why? since we are not using any extra space to store the array numbers or anything else, except the result and few local variables which takes constant space }

#include <bits/stdc++.h> 
using namespace std; 

void find_two_number(int a[], int size, int sum)          // function to find the numbers in given arrray which add to the target sum 
{
    vector<pair<int,int>>ans;                             // vector to store resultant number pairs
    for(int i=0;i<size;i++)
    {
        for(int j=i+1;j<size;j++) 
            if((a[i]+a[j])==sum)                          // checking if numbers add to the target sum
                ans.push_back({a[i],a[j]});               // storing the result in the vector
    }
    
    cout<<"The result number which add to target sum are :"<<endl;           // printing the resultant numbers
    for(int i=0;i<ans.size();i++)
        cout<<ans[i].first<<" "<<ans[i].second<<endl;
}

int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int a[] = {3,5,-4,8,11,-1,1,6};            // input array
    int sum = 10;                              // target sum
    int size = sizeof(a)/sizeof(a[0]);         // calculating size of input array
    find_two_number(a,size,sum);               // calling "find_two_number" function to find the result
    return 0;
}