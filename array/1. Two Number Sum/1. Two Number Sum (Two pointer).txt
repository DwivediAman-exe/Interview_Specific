//TWO NUMBER SUM 
//TIME COMPLEXITY - O(nlogn) + O(n) =  O(nlogn)                                                                                   {n->size of array}
//{why? since we are sorting O(nlogn) the input array, while traversing takes O(n) }
//SPACE COMPLEXITY - O(1)
//{why? since we are not using extra space to store the array numbers  except few local variables which takes constant space}

//PS : This mehtod is useful in the case where "Space" and "Time" are equally important.
//{how? since we are improving the time complexity (O(n^2) to O(nlogn)) as well as we are having constant space complexity}

#include <bits/stdc++.h> 
using namespace std; 

void find_two_number(int a[], int size, int sum)          // function to find the numbers in given arrray which add to the target sum 
{
    vector<pair<int,int>>ans;                             // vector to store resultant number pairs
    sort(a,a+size);                                       // sorting the array takes O(nlogn)
    
    int left=0,right=size-1;                              // initiallizing left and right pointers
    while(left < right)                                   
    {
        int curr_sum=a[left]+a[right];                        // finding the current sum
        if(curr_sum == sum)                               // if current sum is equal to the target sum the we have found our pair
        {
            ans.push_back({a[left],a[right]});            // storing the pair in the result
            left++,right--;                               // incrementing the left and derementing the right pointer
        }
        else if(curr_sum > sum)
            right--;                                      // else if curr_sum > sum then derementing the right pointer
        else
            left++;                                       // else incrementing the left pointer
        
    }
    
    cout<<"The result number which add to target sum are :"<<endl;           // printing the resultant numbers
    for(int i=0;i<ans.size();i++)
        cout<<ans[i].first<<" "<<ans[i].second<<endl;
}

int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int a[] = {3,5,-4,8,11,-1,1,6};            // input array
    int sum = 10;                              // target sum
    int size = sizeof(a)/sizeof(a[0]);         // calculating size of input array
    find_two_number(a,size,sum);               // calling "find_two_number" function to find the result
    return 0;
}